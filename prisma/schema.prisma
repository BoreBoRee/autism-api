generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ar_internal_metadata {
  key        String   @id @db.VarChar
  value      String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model child_developers {
  id                         BigInt    @id @default(autoincrement())
  child_id                   BigInt?
  eat                        String?   @db.VarChar
  sleep                      String?   @db.VarChar
  urine                      String?   @db.VarChar
  feces                      String?   @db.VarChar
  toilet_problem             String?   @db.VarChar
  created_at                 DateTime   @default(now()) @db.Timestamp(6)
  updated_at                 DateTime   @default(now()) @db.Timestamp(6)
  toilet_problem_description String?   @db.VarChar
  p_eat                      String?   @db.VarChar
  eat_description            String?   @db.VarChar
  p_sleep                    String?   @db.VarChar
  sleep_description          String?   @db.VarChar
  p_urine                    String?   @db.VarChar
  urine_description          String?   @db.VarChar
  p_feces                    String?   @db.VarChar
  feces_description          String?   @db.VarChar
  p_toilet_problem           String?   @db.VarChar
  children                   children? @relation(fields: [child_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model child_pregnancies {
  id                             BigInt    @id @default(autoincrement())
  child_id                       BigInt?
  pregnancy                      String?   @db.VarChar
  birth_delay                    String?   @db.VarChar
  birth_category                 String?   @db.VarChar
  birth_after_effect             String?   @db.VarChar
  weight                         String?   @db.VarChar
  health                         String?   @db.VarChar
  created_at                     DateTime  @default(now()) @db.Timestamp(6)
  updated_at                     DateTime  @default(now()) @db.Timestamp(6)
  pregnancy_description          String?   @db.VarChar
  birth_delay_description        String?   @db.VarChar
  birth_after_effect_description String?   @db.VarChar
  health_description             String?   @db.VarChar
  birth_category_description     String?   @db.VarChar
  p_health                       String?   @db.VarChar
  children                       children? @relation(fields: [child_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model children {
  id                 BigInt              @id @default(autoincrement())
  name               String?             @db.VarChar
  birthday           DateTime?           @db.Date
  address            String?             @db.VarChar
  province_id        BigInt?
  district_id        BigInt?
  sub_district_id    BigInt?
  zip_code           Int?
  image_file_name    String?             @db.VarChar
  image_content_type String?             @db.VarChar
  image_file_size    Int?
  image_updated_at   DateTime?           @default(now()) @db.Timestamp(6)
  user_id            BigInt?
  gender_id          BigInt?
  created_at         DateTime            @default(now()) @db.Timestamp(6)
  updated_at         DateTime            @default(now()) @db.Timestamp(6)
  total_child        Int?
  number_child       Int?
  child_developers   child_developers[]
  child_pregnancies  child_pregnancies[]
  districts          districts?          @relation(fields: [district_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  genders            genders?            @relation(fields: [gender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  provinces          provinces?          @relation(fields: [province_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sub_districts      sub_districts?      @relation(fields: [sub_district_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users              users?              @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  screenings         screenings[]
}

model districts {
  id            BigInt          @id @default(autoincrement())
  name          String?         @db.VarChar
  province_id   BigInt?
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  children      children[]
  provinces     provinces?      @relation(fields: [province_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sub_districts sub_districts[]
}

model doctors {
  id                 BigInt               @id @default(autoincrement())
  hospital_id        BigInt?
  user_id            BigInt?
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  image_file_name    String?              @db.VarChar
  image_content_type String?              @db.VarChar
  image_file_size    Int?
  image_updated_at   DateTime?            @default(now()) @db.Timestamp(6)
  first_name         String?              @db.VarChar
  last_name          String?              @db.VarChar
  hospitals          hospitals?           @relation(fields: [hospital_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users              users?               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  screening_comments screening_comments[]
}

model genders {
  id         BigInt     @id @default(autoincrement())
  name       String?    @db.VarChar
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime    @default(now()) @db.Timestamp(6)
  children   children[]
}

model hospital_types {
  id         BigInt      @id @default(autoincrement())
  name       String?     @db.VarChar
  created_at DateTime    @default(now()) @db.Timestamp(6)
  updated_at DateTime    @default(now())@db.Timestamp(6)
  hospitals  hospitals[]
}

model hospitals {
  id               BigInt          @id @default(autoincrement())
  name             String?         @db.VarChar
  phone            String?         @db.VarChar
  lat              String?         @db.VarChar
  lng              String?         @db.VarChar
  hospital_type_id BigInt?
  created_at       DateTime        @db.Timestamp(6)
  updated_at       DateTime         @default(now()) @db.Timestamp(6)
  region_id        BigInt?
  doctors          doctors[]
  hospital_types   hospital_types? @relation(fields: [hospital_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  regions          regions?        @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model provinces {
  id            BigInt          @id @default(autoincrement())
  name          String?         @db.VarChar
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime         @default(now()) @db.Timestamp(6)
  children      children[]
  districts     districts[]
  sub_districts sub_districts[]
}

model regions {
  id         BigInt      @id @default(autoincrement())
  name       String?     @db.VarChar
  created_at DateTime    @default(now()) @db.Timestamp(6)
  updated_at DateTime     @default(now()) @db.Timestamp(6)
  hospitals  hospitals[]
}

model roles {
  id         BigInt   @id @default(autoincrement())
  name       String?  @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  users      users[]
}

model screening_comments {
  id           BigInt      @id @default(autoincrement())
  comment      String?     @db.VarChar
  screening_id BigInt?
  doctor_id    BigInt?
  created_at   DateTime    @default(now()) @db.Timestamp(6)
  updated_at   DateTime     @default(now()) @db.Timestamp(6)
  doctors      doctors?    @relation(fields: [doctor_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  screenings   screenings? @relation(fields: [screening_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model screening_details {
  id                    BigInt               @id @default(autoincrement())
  answered              Boolean?
  screening_id          BigInt?
  screening_question_id BigInt?
  created_at            DateTime             @default(now()) @db.Timestamp(6)
  updated_at            DateTime              @default(now()) @db.Timestamp(6)
  screenings            screenings?          @relation(fields: [screening_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  screening_questions   screening_questions? @relation(fields: [screening_question_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model screening_media {
  id                BigInt      @id @default(autoincrement())
  file_file_name    String?     @db.VarChar
  file_content_type String?     @db.VarChar
  file_file_size    Int?
  file_updated_at   DateTime?   @default(now())  @db.Timestamp(6)
  created_at        DateTime    @default(now()) @db.Timestamp(6)
  updated_at        DateTime     @default(now()) @db.Timestamp(6)
  screening_id      BigInt?
  screenings        screenings? @relation(fields: [screening_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model screening_questions {
  id                BigInt              @id @default(autoincrement())
  question          String?             @db.VarChar
  answered          Boolean?
  correct_score     Float?
  fail_answer       Float?
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime             @default(now()) @db.Timestamp(6)
  screening_details screening_details[]
}

model screening_results {
  id          BigInt       @id @default(autoincrement())
  name        String?      @db.VarChar
  max         Float?
  min         Float?
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  description String?      @db.VarChar
  screenings  screenings[]
}

model screenings {
  id                  BigInt               @id @default(autoincrement())
  score               Float?
  child_id            BigInt?
  screening_result_id BigInt?
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_at          DateTime             @default(now()) @db.Timestamp(6)
  is_guest            Boolean?             @default(false)
  screening_comments  screening_comments[]
  screening_details   screening_details[]
  screening_media     screening_media[]
  children            children?            @relation(fields: [child_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  screening_results   screening_results?   @relation(fields: [screening_result_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sessions {
  id           BigInt   @id @default(autoincrement())
  user_id      BigInt?
  access_token String?  @db.VarChar
  is_active    Boolean?
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  users        users?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model sub_districts {
  id          BigInt     @id @default(autoincrement())
  name        String?    @db.VarChar
  province_id BigInt?
  district_id BigInt?
  zip_code    Int?
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  children    children[]
  districts   districts? @relation(fields: [district_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  provinces   provinces? @relation(fields: [province_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model suggestion_categories {
  id                 BigInt               @id @default(autoincrement())
  name               String?              @db.VarChar
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  suggestion_details suggestion_details[]
}

model suggestion_details {
  id                     BigInt                 @id @default(autoincrement())
  name                   String?                @db.VarChar
  description            String?                @db.VarChar
  image_file_name        String?                @db.VarChar
  image_content_type     String?                @db.VarChar
  image_file_size        Int?
  image_updated_at       DateTime?              @default(now()) @db.Timestamp(6)
  suggestion_category_id BigInt?
  created_at             DateTime               @default(now()) @db.Timestamp(6)
  updated_at             DateTime               @default(now()) @db.Timestamp(6)
  image_url              String?                @db.VarChar
  suggestion_categories  suggestion_categories? @relation(fields: [suggestion_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id               BigInt     @id @default(autoincrement())
  username         String?    @db.VarChar
  crypted_password String?    @db.VarChar
  role_id          BigInt?
  facebook_id      String?    @db.VarChar
  google_id        String?    @db.VarChar
  created_at       DateTime   @default(now()) @db.Timestamp(6)
  updated_at       DateTime   @default(now())  @db.Timestamp(6)
  children         children[]
  doctors          doctors[]
  sessions         sessions[]
  roles            roles?     @relation(fields: [role_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
}

